version: '3.8'

services:
  # PostgreSQL 데이터베이스 서버
  postgres:
    image: postgres:15-alpine
    container_name: carfin_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: carfin
      POSTGRES_USER: carfin_admin
      POSTGRES_PASSWORD: carfin_secure_password_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carfin_admin -d carfin"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 캐시 서버
  redis:
    image: redis:7-alpine
    container_name: carfin_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI 백엔드 서버
  backend:
    build: ./backend
    container_name: carfin_backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512m"

  # Next.js 프론트엔드 (개발용)
  frontend:
    build: ../frontend
    container_name: carfin_frontend
    restart: unless-stopped
    ports:
      - "3005:3000"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512m"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: carfin_network
    driver: bridge